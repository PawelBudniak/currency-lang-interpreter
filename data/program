number incr(number num){
    return num + 1;
}

number factorial(number n){
    print('depth: ', n);
    if (n == 0){
        return 1;
    }
    #number ret = factorial(n-1);
    #print('returned: ' ret);
    return n * factorial(n-1);
}



number fib(number n){
    if (n == 0 || n == 1){
        return 1;
    }

     return fib(n-2) + fib(n-1);
}



number deep(){
    if (true){
        if (true){
            return 3;
        }
        print('cienko');
    }
    print('cienko2');
}

void testfun(currency x ){
    x = 5 gbp;
    print (x);
}

void printDouble (currency x){
    print(2*x);
}

number badFunction(){
    return 'string';
}



void main(){
    number nth_fib = 8;
    print('fib: ', !!nth_fib);
}

void rest(){
    currency kieszonkowe = 10  pln;
    exchange from pln to gbp 0.25;
    #badFunction();

    number x = 10 gbp + 10 gbp + 20 gbp + 40 gbp;


    testfun(4 pln);
    print('x after: ', x);

    number y = 0;
    while (y < 5){
        print(y);
        y = incr(y);
    }

    x = 3 + 6;
    print('x: ' + x);
    number z = x + 10;
    print('z:' + z);
    print('x: ' + x);
    bool mybool = (x + y) * 4 > 3 && !(5 * 2 <= 4) && (factorial(5) > fib(4));
    print(mybool);

    currency zlotys = 10 pln;
    currency dolars = 10 usd;
    currency result = zlotys + [pln] dolars;
    print(result);


    printDouble(result);

    currency polishWyplata = 2600 pln;

    exchange from pln to gbp 0.25;

    currency beka = [gbp] polishWyplata;
    print('polish: ', polishWyplata);
    print('beka: ', beka);

    if (beka < 800 gbp){
        print ('i wy tak zyjecie?');
    }
    if (beka >= 800 gbp){
        print('polska superpower by 2050');
    }
    if (beka == 650 gbp){
        print('ciekawe');
    }

    number testura = 2 + 2 * 3 + 1 + 1;
    if (false || testura == 10){
        print ('kozak ');
    }

    print('ostateczny test, factorial(6): ');
    print(factorial(6));

    print('test deep ' + deep());

    number i = 0;
    while (i < 10){
        print(i, ': ', fib(i));
        i = i + 1;
    }

}